generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum LearningStatus {
  NOT_LEARNED
  LEARNING
  MASTERED
}

model User {
  userId    Int      @id @default(autoincrement())
  email     String   @unique
  fName     String
  lName     String
  password  String
  createdAt DateTime @default(now())
  hashedRt  String?

  cardStudied Int @default(0)
  correct     Int @default(0)

  sets         Set[]
  userCardInfo UserCardInfo[]
}

model Set {
  setId  Int @id @default(autoincrement())
  userId Int

  name        String
  description String?
  color       String  @default("#552583")

  createdAt    DateTime @default(now())
  lastAccess   DateTime @default(now())
  numCards     Int      @default(0)
  cardsLearned Int      @default(0)

  user       User        @relation(fields: [userId], references: [userId], onDelete: Cascade)
  flashcards Flashcard[]
}

model Flashcard {
  cardId Int @id @default(autoincrement())
  setId  Int

  term              String
  definition        String
  contentDefinition String?
  audioDefinition   String?
  contentTerm       String?
  audioTerm         String?

  set          Set            @relation(fields: [setId], references: [setId], onDelete: Cascade)
  userCardInfo UserCardInfo[]
}

model UserCardInfo {
  cardId         Int
  userId         Int
  favorite       Boolean        @default(false)
  learningStatus LearningStatus @default(NOT_LEARNED)

  flashcard Flashcard @relation(fields: [cardId], references: [cardId], onDelete: Cascade)
  user      User      @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@id([cardId, userId])
}
